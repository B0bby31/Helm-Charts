apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "split-pro.fullname" . }}
  labels:
    {{- include "split-pro.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "split-pro.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "split-pro.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.dbname }}"
            - name: NEXTAUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: split-pro-nextauth-secret
                  key: nextauth-secret
            - name: NEXTAUTH_URL
              value: "{{ .Values.nextauth.url }}"
            - name: NEXTAUTH_URL_INTERNAL
              value: "{{ .Values.nextauth.urlInternal }}"
            - name: ENABLE_SENDING_INVITES
              value: "{{ .Values.email.enabled }}"
            {{- if .Values.feedbackEmail }}
            - name: FEEDBACK_EMAIL
              value: "{{ .Values.feedbackEmail }}"
            {{- end }}
            {{- if .Values.email.enabled }}
            - name: FROM_EMAIL
              value: "{{ .Values.email.fromEmail }}"
            - name: EMAIL_SERVER_HOST
              value: "{{ .Values.email.smtp.host }}"
            - name: EMAIL_SERVER_PORT
              value: "{{ .Values.email.smtp.port }}"
            - name: EMAIL_SERVER_USER
              value: "{{ .Values.email.smtp.user }}"
            - name: EMAIL_SERVER_PASSWORD
              value: "{{ .Values.email.smtp.password }}"
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
